const { Markup } = require("telegraf");
const Redis = require("ioredis");
const redis = new Redis(process.env.REDIS_URL);

const ADMIN_CHAT_ID = Number(process.env.ADMIN_ID);

/* –°–ø–∏—Å–æ–∫ –±—É–¥—É—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è */
const FEATURES = [
  {
    id: "D",
    emoji: "üé´",
    title: "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
    short: "–±–æ–Ω—É—Å—ã –∑–∞ –¥—Ä—É–∑–µ–π",
  },
  { id: "E", emoji: "üóìÔ∏è", title: "–ê—Å—Ç—Ä–æ-–∫–∞–ª–µ–Ω–¥–∞—Ä—å", short: "–ª—É–Ω–∞, —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥—ã" },
  {
    id: "F",
    emoji: "üîÆ",
    title: "–¢–∞—Ä–æ / –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è",
    short: "–±—ã—Å—Ç—Ä—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã",
  },
  {
    id: "G",
    emoji: "üìä",
    title: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
    short: "—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π",
  },
  { id: "H", emoji: "üåç", title: "English version", short: "i18n & Stars" },
];

/* –ø—Ä–æ—Å—Ç–æ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º Markdown V2 (—á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏) */
const esc = (s) => s.replace(/[\\_*[\]()~`>#+\-=|{}.!]/g, "\\$&");

module.exports = (bot, sendMainMenu) => {
  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  bot.action("vote_menu", async (ctx) => {
    await ctx.answerCbQuery();
    const rows = FEATURES.map((f) => [
      Markup.button.callback(`${f.emoji} ${f.title}`, `vote_${f.id}`),
    ]);

    await ctx.reply(
      `*üó≥ –ì–æ–ª–æ—Å –∑–∞ –±—É–¥—É—â—É—é —Ñ–∏—á—É*  
–ù–∞–∂–º–∏, —á—Ç–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —É–≤–∏–¥–µ—Ç—å –ø–µ—Ä–≤—ã–º:`,
      { parse_mode: "Markdown", ...Markup.inlineKeyboard(rows) }
    );
  });

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  bot.action(/^vote_([A-Z])$/, async (ctx) => {
    const featId = ctx.match[1];
    const feat = FEATURES.find((f) => f.id === featId);
    if (!feat) return ctx.answerCbQuery();

    const uid = ctx.from.id.toString();
    const voteKey = `votes:${featId}`;

    /* –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = –æ–¥–∏–Ω –≥–æ–ª–æ—Å */
    if (await redis.sismember(voteKey, uid)) {
      await ctx.answerCbQuery("–£–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ üëç", { show_alert: false });
      return;
    }
    await redis.sadd(voteKey, uid);
    const total = await redis.scard(voteKey);

    /* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é */
    await ctx.answerCbQuery("‚úÖ –ì–æ–ª–æ—Å —É—á—Ç—ë–Ω!", { show_alert: false });
    sendMainMenu(ctx); // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

    /* –∞–¥–º–∏–Ω—É (—á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç ‚Äî –±–µ–∑ Markdown => –Ω–∏–∫–∞–∫–∏—Ö —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π) */
    const adminNote = `üó≥ –ù–æ–≤—ã–π –≥–æ–ª–æ—Å ‚Üí ${feat.emoji} ${feat.title}
–û—Ç: ${ctx.from.username || "‚Äî"}  (ID ${uid})
–í—Å–µ–≥–æ –ø–æ —Ñ–∏—á–µ: ${total}`;
    await bot.telegram.sendMessage(ADMIN_CHAT_ID, adminNote);
  });
};
