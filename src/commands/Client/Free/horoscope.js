// üìÅ src/commands/Client/Free/horoscope.js
const { Markup }  = require('telegraf');
const { runFreeLLM } = require('./freeFactory');           // –Ω–∞—à helper

/* ‚îÄ‚îÄ —Å–ø–∏—Å–æ–∫ –∑–Ω–∞–∫–æ–≤ –∏ –∫–ª—é—á–µ–π –¥–ª—è callback ‚îÄ‚îÄ */
const SIGNS = [
  { key: 'aries',       ru: '–û–≤–µ–Ω'       },
  { key: 'taurus',      ru: '–¢–µ–ª–µ—Ü'      },
  { key: 'gemini',      ru: '–ë–ª–∏–∑–Ω–µ—Ü—ã'   },
  { key: 'cancer',      ru: '–†–∞–∫'        },
  { key: 'leo',         ru: '–õ–µ–≤'        },
  { key: 'virgo',       ru: '–î–µ–≤–∞'       },
  { key: 'libra',       ru: '–í–µ—Å—ã'       },
  { key: 'scorpio',     ru: '–°–∫–æ—Ä–ø–∏–æ–Ω'   },
  { key: 'sagittarius', ru: '–°—Ç—Ä–µ–ª–µ—Ü'    },
  { key: 'capricorn',   ru: '–ö–æ–∑–µ—Ä–æ–≥'    },
  { key: 'aquarius',    ru: '–í–æ–¥–æ–ª–µ–π'    },
  { key: 'pisces',      ru: '–†—ã–±—ã'       },
];

module.exports = (bot, flow) => {
  /* ‚îÄ‚îÄ –ø–µ—Ä–≤—ã–π –∫–ª–∏–∫ ¬´–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –Ω–µ–¥–µ–ª—é¬ª ‚îÄ‚îÄ */
  bot.action('horoscope_start', async (ctx) => {
    await ctx.answerCbQuery();
    const rows = SIGNS.map(s => [Markup.button.callback(s.ru, `hz_${s.key}`)]);
    await ctx.reply('üîé –í—ã–±–µ—Ä–∏ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ üëá',
      Markup.inlineKeyboard(rows));
  });

  /* ‚îÄ‚îÄ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –∑–Ω–∞–∫—É ‚îÄ‚îÄ */
  SIGNS.forEach(({ key, ru }) => {
    bot.action(`hz_${key}`, async (ctx) => {
      await ctx.answerCbQuery(`–ì–æ—Ç–æ–≤–ª—é –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è ¬´${ru}¬ª`);

      const prompt =
        `–°–æ—Å—Ç–∞–≤—å –∫–æ—Ä–æ—Ç–∫–∏–π (–¥–æ 900 —Å–∏–º–≤.) 7-–¥–Ω–µ–≤–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ ` +
        `${ru}. –î–∞–π 2 –Ω–µ–±–æ–ª—å—à–∏—Ö –∞–±–∑–∞—Ü–∞: ¬´–û–±—â–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏¬ª –∏ ¬´–°–æ–≤–µ—Ç –¥–Ω—è¬ª.`;

      const answer = await runFreeLLM(ctx, {
        prompt,
        sysMsg : '–°—Ç—Ä—É–∫—Ç—É—Ä–∞: –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å —ç–º–æ–¥–∑–∏, –±–µ–∑ –¥–∞—Ç—ã, –±–µ–∑ —Å—Å—ã–ª–æ–∫.',
        featTag: 'weekly',
        waitText: 'üîÆ –°–æ—Å—Ç–∞–≤–ª—è—é –ø—Ä–æ–≥–Ω–æ–∑‚Ä¶',
        send: false,                 // –≤–µ—Ä–Ω—ë–º —Ç–µ–∫—Å—Ç, –ø–æ—Ç–æ–º –æ–±–æ–≥–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–æ–π
      });

      await ctx.reply(
        answer || 'üåå –ö–æ—Å–º–æ—Å –º–æ–ª—á–∏—Ç.',
        Markup.inlineKeyboard([
          [Markup.button.callback('–ù–∞–∑–∞–¥ ‚óÄÔ∏è', 'back_to_menu')],
        ]),
      );
    });
  });
};