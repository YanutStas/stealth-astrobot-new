//  src/commands/Client/Free/horoscope.js
const { Markup } = require("telegraf");
const { DateTime } = require("luxon");
const { runFreeLLM } = require("./freeFactory");

const SIGNS = [
  "–û–≤–µ–Ω",
  "–¢–µ–ª–µ—Ü",
  "–ë–ª–∏–∑–Ω–µ—Ü—ã",
  "–†–∞–∫",
  "–õ–µ–≤",
  "–î–µ–≤–∞",
  "–í–µ—Å—ã",
  "–°–∫–æ—Ä–ø–∏–æ–Ω",
  "–°—Ç—Ä–µ–ª–µ—Ü",
  "–ö–æ–∑–µ—Ä–æ–≥",
  "–í–æ–¥–æ–ª–µ–π",
  "–†—ã–±—ã",
];

module.exports = (bot, flow) => {
  /* –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∑–Ω–∞–∫–∞ */
  bot.action("horoscope_start", async (ctx) => {
    await ctx.answerCbQuery();
    flow.set(ctx.from.id, "horoscope");
    await ctx.reply(
      "‚ú® –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∑–Ω–∞–∫ –ó–æ–¥–∏–∞–∫–∞:",
      Markup.inlineKeyboard(
        SIGNS.map((s) => [Markup.button.callback(s, `hs_${s}`)])
      )
    );
  });

  /* —Å–∞–º –ø—Ä–æ–≥–Ω–æ–∑ */
  SIGNS.forEach((sign) => {
    bot.action(`hs_${sign}`, async (ctx) => {
      if (flow.get(ctx.from.id) !== "horoscope") return;
      await ctx.answerCbQuery();

      const today = DateTime.local().toFormat("dd.MM.yyyy");
      const prompt = `–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –Ω–µ–¥–µ–ª—é –¥–ª—è –∑–Ω–∞–∫–∞ ¬´${sign}¬ª (${today}).

1. üåü –û–±—â–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ (–∏–∑–±–µ–≥–∞–π —Ç–µ–º –ª—é–±–≤–∏, –∫–∞—Ä—å–µ—Ä—ã, –¥–µ–Ω–µ–≥)
2. üí° –°–æ–≤–µ—Ç –¥–Ω—è (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π)`;

      await runFreeLLM(ctx, {
        prompt,
        sysMsg:
          "–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥. –ü–∏—à–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–æ, –∫—Ä–∞—Ç–∫–æ, —Å —ç–º–æ–¥–∑–∏. –ó–∞–ø—Ä–µ—â–µ–Ω—ã —Ç–µ–º—ã –ª—é–±–≤–∏, –¥–µ–Ω–µ–≥, –∫–∞—Ä—å–µ—Ä—ã.",
        waitText: "üîÆ –°–æ—Å—Ç–∞–≤–ª—è—é –ø—Ä–æ–≥–Ω–æ–∑‚Ä¶",
        featTag: "horoscope",
      });
    });
  });
};
