// üìÅ src/commands/startCommands.js
const { Markup } = require("telegraf");
const Redis = require("ioredis");
const redis = new Redis(process.env.REDIS_URL);

/* ‚îÄ‚îÄ —Ü–µ–Ω—ã –ø–ª–∞—Ç–Ω—ã—Ö –º–∏–Ω–∏-–æ—Ç—á—ë—Ç–æ–≤ ‚îÄ‚îÄ */
const PRICES = { love: 50, career: 50, compat: 150 };

/* ‚îÄ‚îÄ –≤—Å–ø–æ–º–æ–≥–∞–ª–∫–∞: —Ç–µ–∫—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ‚îÄ‚îÄ */
function makeMenuText(name, dailyOn) {
  return `üå† *–ü—Ä–∏–≤–µ—Ç, ${name}!*  
–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å:

üÜì *–ë–µ—Å–ø–ª–∞—Ç–Ω–æ*  
‚Ä¢ üîÆ –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ ‚Äî –±–∞–∑–æ–≤—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç  
‚Ä¢ ‚ú® –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –Ω–µ–¥–µ–ª—é ‚Äî 7-–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑  
‚Ä¢ üî≠ –¢—Ä–∞–Ω–∑–∏—Ç ‚Äî —Ç–µ–∫—É—â–∏–µ –≤–ª–∏—è–Ω–∏—è –ø–ª–∞–Ω–µ—Ç  
‚Ä¢ üå† –°–æ–≤–µ—Ç –¥–Ω—è ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π –ø–∏–Ω-—Å–æ–≤–µ—Ç (${dailyOn ? "–≤–∫–ª—é—á—ë–Ω" : "–≤—ã–∫–ª—é—á–µ–Ω"})

üí∞ *–ü–ª–∞—Ç–Ω—ã–µ –æ—Ç—á—ë—Ç—ã* (–æ–ø–ª–∞—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º)  
‚Ä¢ üíï –õ—é–±–æ–≤—å ‚Äî *${PRICES.love} ‚ÇΩ*  
‚Ä¢ üíº –ö–∞—Ä—å–µ—Ä–∞ ‚Äî *${PRICES.career} ‚ÇΩ*  
‚Ä¢ ‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å ‚Äî *${PRICES.compat} ‚ÇΩ*

–í—ã–±–∏—Ä–∞–π –Ω—É–∂–Ω–æ–µ üëá`;
}

/* ‚îÄ‚îÄ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ‚îÄ‚îÄ */
function makeMenuKeyboard(dailyOn) {
  return Markup.inlineKeyboard([
    [Markup.button.callback("üîÆ –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞", "general_start")],
    [Markup.button.callback("‚ú® –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –Ω–µ–¥–µ–ª—é", "horoscope_start")],
    [Markup.button.callback("üî≠ –¢—Ä–∞–Ω–∑–∏—Ç", "transit_start")],
    [
      Markup.button.callback(
        dailyOn ? "üå† –°–æ–≤–µ—Ç –¥–Ω—è ‚ñ∏ –≤—ã–∫–ª—é—á–∏—Ç—å" : "üå† –°–æ–≤–µ—Ç –¥–Ω—è ‚ñ∏ –≤–∫–ª—é—á–∏—Ç—å",
        "daily_toggle"
      ),
    ],
    [Markup.button.callback(`üíï –õ—é–±–æ–≤—å ‚Äî ${PRICES.love}‚ÇΩ`, "love_start")],
    [Markup.button.callback(`üíº –ö–∞—Ä—å–µ—Ä–∞ ‚Äî ${PRICES.career}‚ÇΩ`, "career_start")],
    [
      Markup.button.callback(
        `‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å ‚Äî ${PRICES.compat}‚ÇΩ`,
        "compat_start"
      ),
    ],
  ]);
}

module.exports = (bot) => {
  /* ‚îÄ‚îÄ –æ—Ç–ø—Ä–∞–≤–∫–∞ / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ‚îÄ‚îÄ */
  const sendMainMenu = async (ctx, edit = false) => {
    const name = ctx.from.first_name || "–¥—Ä—É–≥";
    const uid = ctx.from.id.toString();
    const dailyOn = await redis.sismember("daily_subs", uid);
    const text = makeMenuText(name, !!dailyOn);
    const keyboard = makeMenuKeyboard(!!dailyOn).reply_markup;

    if (edit) {
      /* —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏–∑ callback-query) */
      await ctx.editMessageText(text, {
        parse_mode: "Markdown",
        reply_markup: keyboard,
      });
    } else {
      /* –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (/start, ¬´–ù–∞–∑–∞–¥¬ª) */
      await ctx.reply(text, { parse_mode: "Markdown", reply_markup: keyboard });
    }
  };

  /* ‚îÄ‚îÄ /start ‚îÄ‚îÄ */
  bot.start((ctx) => sendMainMenu(ctx));

  /* ‚îÄ‚îÄ ¬´‚óÄÔ∏è –ù–∞–∑–∞–¥¬ª ‚îÄ‚îÄ */
  bot.action("back_to_menu", async (ctx) => {
    await ctx.answerCbQuery();
    sendMainMenu(ctx, true);
  });

  /* ‚îÄ‚îÄ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å ¬´–°–æ–≤–µ—Ç –¥–Ω—è¬ª ‚îÄ‚îÄ */
  bot.action("daily_toggle", async (ctx) => {
    const uid = ctx.from.id.toString();
    const on = await redis.sismember("daily_subs", uid);

    if (on) {
      await redis.srem("daily_subs", uid);
      await ctx.answerCbQuery("üõë –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –≤—ã–∫–ª—é—á–µ–Ω—ã.", {
        show_alert: true,
      });
    } else {
      await redis.sadd("daily_subs", uid);
      await ctx.answerCbQuery(
        "‚úÖ –í–∫–ª—é—á–µ–Ω–æ! –ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–≤–µ—Ç –∏ –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å –µ–≥–æ.",
        { show_alert: true }
      );
    }

    /* –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –ø–æ–¥–ø–∏—Å—å –∫–Ω–æ–ø–∫–∏ –ø—Ä—è–º–æ –≤ —Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏ */
    sendMainMenu(ctx, true);
  });
};
